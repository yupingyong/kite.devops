@page "/Server/Console"
@using Kite.DevOps.Application.Contracts.Server
@using Kite.DevOps.Application.Contracts.Server.Dtos
@using Mapster
@using Kite.DevOps.Domain.Shared.Enums
@inject ToastService toastService
@inject IServerAppService serverAppService
@inject IServerGroupAppService serverGroupAppService


<Layout SideWidth="220px" style="min-height: 180px; border: 1px solid #ddd; border-radius: 4px;">
    <Header>
        <div class="header">控制台</div>
    </Header>
    <Side>
        <div style="border-right: 1px solid #e6e6e6; height: 100%; overflow: auto; padding: 1rem 0;">
            <Menu Items="@MenuItems" IsVertical="true" OnClick="@OnClickMenuItem" @ref="TabMenu" />
        </div>
    </Side>
    <Main>
        <div class="tab-main-demo">
            <Tab @ref="TabSetMenu" ShowClose="true">
            </Tab>
        </div>
    </Main>
</Layout>

@code {

    private Tab? TabSetMenu { get; set; }
    private Menu? TabMenu { get; set; }

    private List<MenuItem> MenuItems { get; set; } = new List<MenuItem>();
    protected override async void OnInitialized()
    {
        base.OnInitialized();
        var serverGroups = await serverGroupAppService.GetListAsync();
        var servers = await serverAppService.GetListAsync();
        foreach (var g in serverGroups.Data)
        {
            MenuItems.Add(new MenuItem()
                {
                    Text = g.GroupName,
                    Items = servers.Data.Where(x => x.GroupId == g.Id)
                        .Select(x => new MenuItem()
                        {
                            Text = x.ServerName
                        })
                        .ToList()
                });      
        }
    }
    private Task OnClickMenuItem(MenuItem item)
    {
        var text = item.Text;
        var tabItem = TabSetMenu.Items.FirstOrDefault(i => i.Text == text);
        if (tabItem == null)
        {
            AddTabItem(text ?? "");
        }
        else
        {
            TabSetMenu.ActiveTab(tabItem);
        }
        return Task.CompletedTask;
    }
    private void AddTabItem(string text) => TabSetMenu.AddTab(new Dictionary<string, object?>
    {
        [nameof(TabItem.Text)] = text,
        [nameof(TabItem.IsActive)] = true,
        [nameof(TabItem.ChildContent)] = BootstrapDynamicComponent.CreateComponent<BootstrapBlazor.Components.Console>().Render()
    });
}
