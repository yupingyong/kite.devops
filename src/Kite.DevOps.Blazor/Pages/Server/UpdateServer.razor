@using Kite.DevOps.Application.Contracts.Server
@using Kite.DevOps.Application.Contracts.Server.Dtos

@inject ToastService toastService
@inject IServerAppService serverAppService
@inject IServerGroupAppService serverGroupAppService
<div class="row">
    <ValidateForm Model="@Model" OnValidSubmit="@OnSaveAsync" OnInvalidSubmit="@OnInvalidSubmitAsync">
            <div class="col-12">
                   <BootstrapInput @bind-Value="Model.ServerName" DisplayText="服务器名" IsTrim="true" />
             </div>
             <div class="col-12"  style="margin-top:5px;" >
                   <Select @bind-Value="Model.GroupId" Items="@ServerGroups" DisplayText="服务器组">
                         
                   </Select>
             </div>
            <div class="col-12"  style="margin-top:5px;" >
                 <BootstrapInput @bind-Value="Model.Host" DisplayText="主机(IP)" IsTrim="true"/>
            </div>
            <div class="col-12"  style="margin-top:5px;" >
                 <BootstrapInputNumber @bind-Value="Model.Port" DisplayText="端口号" IsTrim="true"/>
            </div>
            <div class="col-12"  style="margin-top:5px;" >
                 <BootstrapInput @bind-Value="Model.UserName" DisplayText="用户名" IsTrim="true"/>
            </div>
            <div class="col-12"  style="margin-top:5px;" >
                 <BootstrapInput @bind-Value="Model.Password" DisplayText="登录密码" IsTrim="true"/>
            </div>

            <div class="col-12"  style="margin-top:5px;">
                   <Select @bind-Value="Model.DockerComposeVersion" DisplayText="容器编排版本(docker compose)"  style="margin-top:5px;" >
                        </Select>
            </div>
            <div class="col-12"  style="margin-top:5px;">
                   <CheckboxList @bind-Value="@Model.SystemTag" Items="@SystemTags" DisplayText="系统标签"></CheckboxList>
            </div>
            <div class="col-12"  style="margin-top:5px;" >
                 <Textarea  @bind-Value="Model.Remarks" DisplayText="备注信息" IsTrim="true"/>
            </div>
            <div class="row" style="margin-top:10px;">
                <div class="col-12">
                    <Button ButtonType="ButtonType.Submit"  IsAsync="true" Color="Color.Primary">保 存</Button>
                </div>
            </div>
           </ValidateForm>
</div>


@code {

    [Parameter]
    public EventCallback OnClickCallback { get; set; }


    //表单数据
    [Parameter]
    public UpdateServerDto Model { get; set; }

    private List<SelectedItem> ServerGroups { get; set; } = new List<SelectedItem>();

    private List<SelectedItem> SystemTags { get; set; } = new List<SelectedItem>();
    /// <summary>
    /// OnInitialized 方法
    /// </summary>
    protected override async void OnInitialized()
    {
        base.OnInitialized();
        //初始化请求方式数据
        var systemTags = new string[] { "Centos 7", "Centos 8", "Ubuntu", "Aliyun OS", "Tencent OS", "其它" };
        foreach (var m in systemTags)
        {
            SystemTags.Add(new SelectedItem()
            {
                Text=m,
                Value=m
            });
        }
        //获取服务器组信息
        var routeResult = await serverGroupAppService.GetListAsync();
        if (routeResult.Code == 0)
        {
            foreach (var item in routeResult.Data)
            {
                ServerGroups.Add(new SelectedItem()
                    {
                        Text = item.GroupName,
                        Value = item.Id.ToString()
                    });
            }
        }
    }
    private Task OnInvalidSubmitAsync(EditContext context)
    {
        return Task.CompletedTask;
    }
    private async Task OnSaveAsync(EditContext context)
    {
        var result= await serverAppService.UpdateAsync(Model);
        if (result.Code != 0)
        {
            await toastService.Warning(result.Message);
        }
        else
        {
            await OnClickCallback.InvokeAsync();
            await toastService.Success("保存成功");
        }
    }
}
